{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## **Activité 1(Intérêts simples ou composés).**\n",
    "\n",
    "**Objectifs : créer deux listes afin de comparer deux types d’intérêts.**\n",
    "\n",
    "**1.Intérêts simples.**\n",
    "   \n",
    "On dispose d’une somme S0. Chaque année ce placement rapporte des intérêts enfonction de la somme initiale.\n",
    "Par exemple avec une somme initiale S0 = 1000 et des intérêts simples de p = 10%. Les intérêtssont de 100. Donc au bout d’un an, je dispose d’une somme de S1 = 1100, au bout de deux ans  S2=1200...\n",
    "\n",
    "Programmer une fonction *interets_simples(S0,p,n)* qui renvoie les listes des sommes des n premières années. Par exemple *interets_simples(1000,10,3)* renvoie [1000, 1100, 1200, 1300].\n",
    "\n",
    "**2.Intérêts composés.**\n",
    "\n",
    "Une somme S0 rapporte selon des intérêts composés. Cette fois les intérêts sontcalculés chaque année sur la base de la somme de l’année précédente, c’est-à-dire selon la formule :\n",
    "$I_n=+1 = S_n  \\times \\frac{p}{100}$ \n",
    "\n",
    "Programmer une fonction *interets_composes(S0,p,n)* qui renvoie la liste des sommes des n premières années. Par exemple *interets_composes(1000,10,3)* renvoie [1000, 1100, 1210, 1331].\n",
    "\n",
    "**3.** J’ai le choix entre un placement à intérêts simples de10%et un placement à intérêts composés de7%. Quelle est la solution la plus avantageuse en fonction de la durée du placement ?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "def interets_simples(S0,p,n):\n",
    "    liste = [S0]\n",
    "    #Entrez votre code ici\n",
    "    #interets = S0 * p/100\n",
    "    #S = S0\n",
    "    #for i in range(n):\n",
    "    #    S = S + interets\n",
    "    #    liste.append(S)\n",
    "    #return liste"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--- Intérêts simples ---\n"
     ]
    },
    {
     "ename": "NameError",
     "evalue": "name 'liste' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-6-96b86d5db4af>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[1;31m# Test\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      2\u001b[0m \u001b[0mprint\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m\"--- Intérêts simples ---\"\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 3\u001b[1;33m \u001b[0mliste_interets_simples\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0minterets_simples\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;36m1000\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;36m10\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;36m12\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m      4\u001b[0m \u001b[0mprint\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mliste_interets_simples\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      5\u001b[0m \u001b[0mprint\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mliste_interets_simples\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;36m11\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m<ipython-input-5-cbd8125ee969>\u001b[0m in \u001b[0;36minterets_simples\u001b[1;34m(S0, p, n)\u001b[0m\n\u001b[0;32m      5\u001b[0m     \u001b[1;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mn\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      6\u001b[0m         \u001b[0mS\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mS\u001b[0m \u001b[1;33m+\u001b[0m \u001b[0minterets\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 7\u001b[1;33m         \u001b[0mliste\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mS\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m      8\u001b[0m     \u001b[1;32mreturn\u001b[0m \u001b[0mliste\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mNameError\u001b[0m: name 'liste' is not defined"
     ]
    }
   ],
   "source": [
    "# Test\n",
    "print(\"--- Intérêts simples ---\")\n",
    "liste_interets_simples = interets_simples(1000,10,12)\n",
    "print(liste_interets_simples)\n",
    "print(liste_interets_simples[11])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
